# Generated by Django 2.2.1 on 2019-08-21 02:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('first_name', models.CharField(max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(max_length=50, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=10, verbose_name='gender')),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=10, verbose_name='blood group')),
                ('diseases', models.CharField(blank=True, max_length=250, null=True, verbose_name='diseases (If any)')),
                ('contact', models.CharField(max_length=20, verbose_name='contact')),
                ('address', models.CharField(max_length=250, verbose_name='address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='state/province')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('donation_type', models.PositiveSmallIntegerField(choices=[(0, 'Blood'), (1, 'Organ'), (2, 'Tissue')], verbose_name='donation type')),
                ('organ_name', models.CharField(blank=True, choices=[('Heart', 'Heart'), ('Kidney', 'Kidney'), ('Pancreas', 'Pancreas'), ('Lungs', 'Lungs'), ('Liver', 'Liver'), ('Intestines', 'Intestines')], max_length=100, null=True, verbose_name='organ name')),
                ('tissue_name', models.CharField(blank=True, choices=[('Bones', 'Bones'), ('Ligaments', 'Ligaments'), ('Tendons', 'Tendons'), ('Fascia', 'Fascia'), ('Veins', 'Veins'), ('Nerves', 'Nerves'), ('Corneas', 'Corneas'), ('Sclera', 'Sclera'), ('Heart Valves', 'Heart Valves'), ('Skin', 'Skin')], max_length=100, null=True, verbose_name='tissue name')),
                ('quantity', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='quantity')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='description')),
                ('collection_date', models.DateField(verbose_name='collection date')),
                ('expiration_date', models.DateField(verbose_name='expiration date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Donation',
                'verbose_name_plural': 'Donations',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='DonationBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute', models.CharField(max_length=100, verbose_name='institute name')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('address', models.CharField(max_length=250, verbose_name='address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='state/province')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('contact', models.CharField(max_length=100, verbose_name='contact no.')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'DonationBank',
                'verbose_name_plural': 'DonationBanks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MemberRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_member_request', to='donationBank.DonationBank', verbose_name='bank')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_member_request', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'MemberRequest',
                'verbose_name_plural': 'MemberRequests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DonationProgress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_status', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Completed')], default=0, verbose_name='progress status')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='completion date')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='last name')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=10, null=True, verbose_name='gender')),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=10, null=True, verbose_name='blood group')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('contact', models.CharField(blank=True, max_length=20, null=True, verbose_name='contact')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='address')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='state/province')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('details', models.TextField(blank=True, max_length=500, null=True, verbose_name='details')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('donation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='donation_progress', to='donationBank.Donation', verbose_name='donation')),
            ],
            options={
                'verbose_name': 'Donation Progress',
                'verbose_name_plural': 'Donation Progresses',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='DonationBankSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_request', models.PositiveSmallIntegerField(choices=[(0, 'Allow'), (1, 'Not Allow')], default=0, verbose_name='member request')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('bank', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bank_setting', to='donationBank.DonationBank', verbose_name='bank')),
            ],
            options={
                'verbose_name': 'DonationBankSetting',
                'verbose_name_plural': 'DonationBankSettings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='donation',
            name='bank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donation_bank_bank', to='donationBank.DonationBank', verbose_name='bank'),
        ),
        migrations.CreateModel(
            name='BankMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.PositiveSmallIntegerField(choices=[(0, 'Creator'), (1, 'Maintainer')], default=1, verbose_name='member role')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_member', to='donationBank.DonationBank', verbose_name='bank')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_bank_member', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'BankMember',
                'verbose_name_plural': 'BankMembers',
                'ordering': ['-created_at'],
            },
        ),
    ]
